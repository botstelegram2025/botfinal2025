#!/bin/bash
set -euo pipefail

echo "üöÄ Iniciando BOT (sem WhatsApp local)‚Ä¶"

# --- Configura√ß√µes recomendadas para logs no Railway ---
export PYTHONUNBUFFERED=1
export PYTHONDONTWRITEBYTECODE=1
export TZ="${TZ:-America/Sao_Paulo}"

# --- Pr√©-checagens de ambiente ---

# 1) WhatsApp Service externo obrigat√≥rio
if ! python - << 'PY'
import os, sys
url = os.getenv("WHATSAPP_SERVICE_URL", "").strip()
if not url:
    print("ERRO: WHATSAPP_SERVICE_URL n√£o definido.", file=sys.stderr)
    sys.exit(2)
print("OK")
PY
then
  echo "‚ùå WHATSAPP_SERVICE_URL n√£o est√° configurado. Defina a URL do servi√ßo WhatsApp externo (ex.: https://seuservico.railway.app)."
  exit 2
fi

# 2) (Opcional) Mostra se token est√° setado (sem vazar valor)
if [ -n "${WHATSAPP_API_TOKEN:-}" ]; then
  echo "üîê WHATSAPP_API_TOKEN definido"
fi
if [ -n "${WHATSAPP_SESSION_ID:-}" ]; then
  echo "ü™™ WHATSAPP_SESSION_ID=${WHATSAPP_SESSION_ID}"
fi

# 3) (Opcional) Tenta pingar /status s√≥ para log informativo (n√£o bloqueante)
if command -v curl >/dev/null 2>&1; then
  echo "ü©∫ Verificando WhatsApp Service em ${WHATSAPP_SERVICE_URL}/status (best-effort)‚Ä¶"
  if [ -n "${WHATSAPP_API_TOKEN:-}" ]; then
    curl -fsS -H "x-api-token: ${WHATSAPP_API_TOKEN}" "${WHATSAPP_SERVICE_URL%/}/status" || true
  else
    curl -fsS "${WHATSAPP_SERVICE_URL%/}/status" || true
  fi
else
  echo "‚ÑπÔ∏è curl n√£o dispon√≠vel; pulando verifica√ß√£o HTTP."
fi

# --- IMPORTANTE ---
# N√£o instalamos depend√™ncias aqui. Instale tudo no build (Dockerfile ou Nixpacks).
# Nada de 'npm install' ou 'node whatsapp_baileys_multi.js' neste servi√ßo.

echo "ü§ñ Iniciando Telegram bot‚Ä¶"
# Use exec para que o processo do bot seja o PID 1 (boas pr√°ticas em containers)
exec python main.py
